swagger: '2.0'
info:
  title: Dinner Solutions API
  description: An API for Dinner Solutions, focused on mobile
  version: "0.1.0"
host: api.davidjfelix.com
schemes:
  - http
  - https
basePath: /v0
produces:
  - application/json
paths:
  /users/{user_id}:
    get:
      summary: User by id
      description: |
        The user endpoint returns information about a given user or a set of users.
      parameters:
        - name: user_id
          in: path
          description: The id of the user
          required: true
          type: string
          format: uuid
      tags:
        - users
      responses:
        200:
          description: A user object.
          schema:
            type: object
  /me:
    get:
      summary: Me
      description: |
        The me endpoint returns information about my user profile.
      tags:
        - users
      responses:
        200:
          description: A user object.
          schema:
            type: object
  /me/by-token:
    post:
      summary: Me by token
      description: |
        The me by token endpoint returns information about my user profile.
        It takes a token to authenticate.
      tags:
        - users
      responses:
        200:
          description: A user object.
          schema:
            type: object
  /meals:
    get:
      summary: Get a meals collection.
      description: |
        The meals get collection endpoint allows clients to search for meals by parameters.
        It returns meals based on relevance to the search parameters.
      parameters:
        - name: lat
          in: query
          description: The geographic latitude of the search.
          required: false
          type: number
          format: double
        - name: lng
          in: query
          description: The geographic longitude of the search.
          required: false
          type: number
          format: double
      tags:
        - meals
        - search
      responses:
        200:
          description: The search parameters yielded a result set.
          schema:
            type: object
    post:
      summary: Post a new meal.
      description: |
        The meals post endpoint allows clients to create a new meal.
      parameters:
        - name: meal
          in: body
          schema:
            $ref: '#/definitions/NewMeal'
      tags:
        - meals
      responses:
        201:
          description: The meal posted correctly
          schema:
            type: object
  /meals/{meal_id}:
    delete:
      summary: Delete a meal by id
      description: |
        The delete action marks the meal as inactive.
      parameters:
        - name: meal_id
          in: path
          description: The id of the meal
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Meal'
    get:
      summary: Get a meal
      description: |
        Get a meal
      parameters:
        - name: meal_id
          in: path
          description: The id of the meal
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Meal'
    patch:
      summary: Partially update a meal
      description: |
        Partially update a meal
      parameters:
        - name: meal_id
          in: path
          description: The id of the meal
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Meal'
    put:
      summary: Update a meal
      description: |
        Update a meal
      parameters:
        - name: meal_id
          in: path
          description: The id of the meal
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Meal'
          
definitions:
  Meal:
    type: object
    required:
      - meal_id
      - name
    properties:
      meal_id:
        type: string
        format: uuid
      name:
        type: string
  NewMeal:
    type: object
    required:
      - name
    properties:
      name: 
        type: string
